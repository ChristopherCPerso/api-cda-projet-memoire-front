name: Build and Deploy to Infomaniak

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Étape 2 : Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # Étape 3 : Installer les dépendances pour le build
      - name: Install Dependencies
        run: npm ci

      # Étape 4 : Build l'application
      - name: Build Application
        run: npm run build

      # Étape 5a : Archiver le dossier build
      - name: Archive build folder
        run: tar czf build.tar.gz -C build .

      # Étape 5b : Copier l'archive + fichiers essentiels sur le serveur
      - name: Copy production files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: |
            build.tar.gz
            server.js
            package.json
            package-lock.json
          target: ${{ secrets.SERVER_PATH }}
          strip_components: 0
          overwrite: true

      # Étape 6 : Décompresser l’archive, créer .env et relancer l'app avec PM2
      - name: Configure and Restart Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.SERVER_PATH }}

            # Décompresser le build
            tar xzf build.tar.gz
            rm build.tar.gz

            # Créer le .env avec le secret GitHub
            echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" > .env
            echo ".env file created successfully"

            # Installer les dépendances (prod uniquement)
            npm install --omit=dev

            # Redémarrer via PM2
            echo "Restarting PM2 process..."
            pm2 restart frontdvisor --update-env || pm2 start "npm run start" --name "frontdvisor"
            pm2 save
            echo "Deployment finished!"
